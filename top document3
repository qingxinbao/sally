component decode
port(d: in std_logic_vector(3 downto 0);
     led7s : out std_logic_vector(6 downto 0));
end component;
signal net1,net2,net3,net7,net8:std_logic;
signal net4,net5:std_logic_vector(31 downto 0);
signal net6:std_logic_vector(55 downto 0);
begin
	u1: div port map(clk50=>clk,clk=>net7);
	u2: choose4 port map(clk=>clk1,s=>s,ofin=>net8);
	u3: ftctrl port map(clkk=>net7,cnt_en=>net1,rst_cnt=>net2,load=>net3);
	u4: counter32 port map(fin=>net8,enabl=>net1,clr=>net2,dout=>net4);
	u5: reg32b port map(lk=>net3,din=>net4,y=>net5);
	u6: decode port map(d(3 downto 0)=>net5(3 downto 0),led7s(6 downto 0)=>net6(6 downto 0));
	u7: decode port map(d(3 downto 0)=>net5(7 downto 4),led7s(6 downto 0)=>net6(13 downto 7));
	u8: decode port map(d(3 downto 0)=>net5(11 downto 8),led7s(6 downto 0)=>net6(20 downto 14));
	u9: decode port map(d(3 downto 0)=>net5(15 downto 12),led7s(6 downto 0)=>net6(27 downto 21));
	u10: decode port map(d(3 downto 0)=>net5(19 downto 16),led7s(6 downto 0)=>net6(34 downto 28));
	u11: decode port map(d(3 downto 0)=>net5(23 downto 20),led7s(6 downto 0)=>net6(41 downto 35));
	u12: decode port map(d(3 downto 0)=>net5(27 downto 24),led7s(6 downto 0)=>net6(48 downto 42));
	u13: decode port map(d(3 downto 0)=>net5(31 downto 28),led7s(6 downto 0)=>net6(55 downto 49));
	ledout<=net6;
end;
